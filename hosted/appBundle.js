(()=>{"use strict";const e=(e,t,n)=>fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":t._csrf},body:JSON.stringify(t)}).then((e=>a(e,n))),t=(e,t)=>fetch(e,{method:"GET",headers:{Accept:"application/json"}}).then((e=>a(e,t))),a=(e,t)=>e.ok?e.json():t(e.json()),n=e=>e.leaderboard?e.leaderboard.length<=0?React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("h4",{className:"one-half column"},"Leaderboard"),React.createElement("select",{id:"filterDropdown",onChange:c},React.createElement("option",{value:"unset"},"All"),React.createElement("option",{value:"Alpine"},"Alpine"),React.createElement("option",{value:"Mountain"},"Mountain"))),React.createElement("p",null,"This leaderboard has no records to show!")):React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("h4",{className:"one-half column"},"Leaderboard"),React.createElement("select",{id:"filterDropdown",onChange:c},React.createElement("option",{value:"unset"},"All"),React.createElement("option",{value:"Alpine"},"Alpine"),React.createElement("option",{value:"Mountain"},"Mountain"))),React.createElement("table",{className:"u-full-width"},React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"Name"),React.createElement("th",null,"Type"),React.createElement("th",null,"Score"))),React.createElement("tbody",null,e.leaderboard.map((e=>React.createElement("tr",null,React.createElement("td",null,e.name),React.createElement("td",null,e.type),React.createElement("td",null,e.score))))))):React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("h4",{className:"one-half column"},"Leaderboard"),React.createElement("select",{id:"filterDropdown",onChange:c},React.createElement("option",{value:"unset"},"All"),React.createElement("option",{value:"Alpine"},"Alpine"),React.createElement("option",{value:"Mountain"},"Mountain"))),React.createElement("p",null,"No leaderboards to show!")),c=e=>{const a="/leaderboard"+("unset"!=e.target.value?"?filter="+e.target.value:"");t(a).then((e=>{ReactDOM.render(React.createElement(n,{leaderboard:e.leaderboard}),document.querySelector("#content"))}))};let l,r,o;const m=e=>React.createElement("div",{className:"container"},React.createElement("h4",null,e.profile.username),React.createElement("h5",null,"Avatar: ",r?r.name:"Default",r?React.createElement("img",{src:"/assets/img/"+r.type+r.path+"/icon.png"}):""),React.createElement("h5",null,"Terrain Pack: ",o?o.name:"Default",o?React.createElement("img",{src:"/assets/img/"+o.type+o.path+"/icon.png"}):""),React.createElement("h5",null,"Owned Items"),React.createElement("div",{className:"u-full-width",id:"marketItems"})),i=e=>!e.profile.ownedItems||e.profile.ownedItems<=0?React.createElement("div",null,React.createElement("p",null,"There are no items to show!")):e.profile.ownedItems.map((t=>React.createElement("div",{className:"marketItem"},React.createElement("div",{className:"container"},React.createElement("img",{src:"/assets/img/"+t.type+t.path+"/icon.png"}),React.createElement("h5",null,t.name),s(e,t))))),s=(t,a)=>a._id===l.equipedAvatar||a._id===l.equipedTerrain?React.createElement("button",{type:"button",className:"button"},"Equiped"):React.createElement("button",{type:"button",className:"button-primary",onClick:async n=>{await e("/equipItem",{id:a._id,type:a.type,_csrf:t.csrf}),u()}},"Equip"),d=async()=>{const e=await t("/getProfile");return l=e.profile,r=l.ownedItems.find((e=>e._id===l.equipedAvatar)),o=l.ownedItems.find((e=>e._id===l.equipedTerrain)),l},u=async()=>{await d();const e=await t("/getToken").then((e=>e.csrfToken));ReactDOM.render(React.createElement(m,{profile:l}),document.querySelector("#content")),ReactDOM.render(React.createElement(i,{profile:l,csrf:e}),document.querySelector("#marketItems"))},R=e=>React.createElement("div",{className:"container"},React.createElement("div",{className:"row"},React.createElement("h4",{className:"one-half column"},"Ski Shop"),React.createElement("select",{id:"filterDropdown",onChange:t=>{h(t.target.value,e.csrf)}},React.createElement("option",{value:"unset"},"All"),React.createElement("option",{value:"terrain"},"Terrain Packs"),React.createElement("option",{value:"avatar"},"Avatars"))),React.createElement("div",{className:"u-full-width",id:"marketItems"})),E=e=>!e.market||e.market.length<=0?React.createElement("p",null,"Nothing was found in the Ski Shop!"):e.market.map((t=>React.createElement("div",{className:"marketItem"},React.createElement("div",{className:"container"},React.createElement("img",{src:"/assets/img/"+t.type+t.path+"/icon.png"}),React.createElement("h5",null,t.name),p(e,t))))),p=(t,a)=>{let n=(e=>l.ownedItems.find((t=>t._id===e._id)))(a);return n?React.createElement("button",{type:"button",class:"button"},"Owned"):React.createElement("button",{type:"button",class:"button-primary",onClick:async n=>{await e("/buyItem",{id:a._id,_csrf:t.csrf}),h("unset",t.csrf)}},"Buy")},h=(e,a)=>{const n="/market"+("unset"!=e?"?filter="+e:"");console.dir("update"),t(n).then((async e=>{await d(),ReactDOM.render(React.createElement(E,{market:e.market,csrf:a}),document.querySelector("#marketItems"))}))};let f,b;const y=e=>React.createElement("canvas",null,"Canvas needs to be supported!"),v=()=>{requestAnimationFrame(v),b.clearRect(0,0,600,600),b.fill="black",b.fillRect(0,0,100,100)},k=e=>React.createElement("div",{className:"container"},React.createElement("div",{className:"row",id:"headerBar"},React.createElement("button",{type:"button",className:"button",id:"marketButton",onClick:()=>{console.dir("clicked market"),(async()=>{ReactDOM.render(React.createElement(R,null),document.querySelector("#content"));const e=await t("/getToken").then((e=>e.csrfToken)),a=await t("/market");await d(),ReactDOM.render(React.createElement(R,{csrf:e}),document.querySelector("#content")),ReactDOM.render(React.createElement(E,{market:a.market,csrf:e}),document.querySelector("#marketItems"))})()}},"Market"),React.createElement("button",{type:"button",className:"button",id:"leaderboardButton",onClick:()=>{console.dir("clicked leaderboard"),ReactDOM.render(React.createElement(n,null),document.querySelector("#content")),t("/leaderboard").then((e=>{ReactDOM.render(React.createElement(n,{leaderboard:e.leaderboard}),document.querySelector("#content"))}))}},"Leaderboards"),React.createElement("button",{type:"button",className:"button",id:"gameButton",onClick:()=>{console.dir("clicked game"),w()}},"Game"),React.createElement("button",{type:"button",className:"button",id:"profileButton",onClick:()=>{console.dir("clicked profile"),u()}},"Profile"))),w=()=>{ReactDOM.render(React.createElement(k,null),document.querySelector("#header")),(async()=>{ReactDOM.render(React.createElement(y,null),document.querySelector("#content")),f=document.querySelector("canvas"),f.width=600,f.height=600,b=f.getContext("2d"),v()})()};window.onload=()=>{w()}})();